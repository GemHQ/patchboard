// Generated by CoffeeScript 1.3.3
var SchemaManager, patchboard_schema;

patchboard_schema = require("../patchboard_api").schema;

SchemaManager = (function() {

  function SchemaManager(application_schema) {
    this.application_schema = application_schema;
    this.schemas = {};
    this.normalize(patchboard_schema);
    this.normalize(this.application_schema);
    this.register_schema(patchboard_schema);
    this.register_schema(this.application_schema);
  }

  SchemaManager.prototype.normalize = function(schema) {
    var definition, name, _ref, _results;
    _ref = schema.properties;
    _results = [];
    for (name in _ref) {
      definition = _ref[name];
      if (definition.id && definition.id.indexOf("#") === 0) {
        definition.id = "" + schema.id + definition.id;
      } else {
        definition.id = "" + schema.id + "#" + name;
      }
      if (definition["extends"]) {
        if (definition["extends"].$ref && definition["extends"].$ref.indexOf("#") === 0) {
          _results.push(definition["extends"].$ref = "" + schema.id + definition["extends"].$ref);
        } else {
          _results.push(void 0);
        }
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  SchemaManager.prototype.register_schema = function(schema) {
    var definition, name, _ref, _results;
    _ref = schema.properties;
    _results = [];
    for (name in _ref) {
      definition = _ref[name];
      this.schemas[name] = definition;
      if (definition.id) {
        _results.push(this.schemas[definition.id] = definition);
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  SchemaManager.prototype.document = function() {
    return this.document_markdown();
  };

  SchemaManager.prototype.document_markdown = function() {
    var name, out, schema, _ref;
    out = [];
    out.push("# Schemas");
    _ref = this.schemas;
    for (name in _ref) {
      schema = _ref[name];
      out.push(this.schema_doc(name, schema));
    }
    return out.join("\n\n");
  };

  SchemaManager.prototype.schema_doc = function(name, schema) {
    var lines;
    lines = [];
    lines.push("<a id=\"" + (schema.id.replace("#", "/")) + "\"></a>\n## " + name + " ");
    lines.push("```json\n" + (JSON.stringify(schema, null, 2)) + "\n```");
    return lines.join("\n\n");
  };

  return SchemaManager;

})();

module.exports = SchemaManager;
