// Generated by CoffeeScript 1.3.3
var html, marked;

marked = require("marked");

html = function(input) {
  return "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>API Documentation</title>\n\n    <style type=\"text/css\">\n      body { padding: 1em; }\n    </style>\n  </head>\n  <body>\n    " + input + "\n  </body>\n</html>";
};

module.exports = function(service) {
  return {
    meta: {
      options: function(context) {
        var allowed, match, request, response;
        request = context.request, response = context.response, match = context.match;
        allowed = match.allow.join(", ");
        return context.respond(204, "", {
          "Allow": allowed,
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": allowed,
          "Access-Control-Allow-Headers": "Content-Type, Accept",
          "Access-Control-Max-Age": 30
        });
      }
    },
    service: {
      description: function(context) {
        var content, match, request, response;
        request = context.request, response = context.response, match = context.match;
        context.set_cors_headers("*");
        content = JSON.stringify(service.description, null, 2);
        return context.respond(200, content, {
          "Content-Type": "application/json"
        });
      },
      documentation: function(context) {
        var content, markdown, match, media_type, request, response;
        request = context.request, response = context.response, match = context.match;
        markdown = service.documentation();
        if (/html/.test(request.headers["accept"])) {
          content = html(marked(markdown));
          media_type = "text/html";
        } else {
          content = markdown;
          media_type = "text/plain";
        }
        context.set_cors_headers("*");
        return context.respond(200, content, {
          "Content-Type": media_type
        });
      },
      "default": function(context) {
        var content, match, request, response;
        request = context.request, response = context.response, match = context.match;
        content = JSON.stringify({
          message: "Unimplemented: " + match.resource_type + "." + match.action_name
        });
        context.set_cors_headers("*");
        return context.respond(501, content({
          "Content-Type": "application/json",
          "Content-Length": content.length
        }));
      }
    }
  };
};
