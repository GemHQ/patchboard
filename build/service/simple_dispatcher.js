// Generated by CoffeeScript 1.3.3
var Classifier, SimpleDispatcher, http;

http = require("http");

Classifier = require("./classifier");

SimpleDispatcher = (function() {

  function SimpleDispatcher(options) {
    this.schema = options.schema;
    this.http_interface = options["interface"];
    this.map = options.map;
    this.handlers = options.handlers;
    this.classifier = new Classifier(options);
    this.error_handler = options.error_handler;
  }

  SimpleDispatcher.prototype.dispatch = function(request, response) {
    var handler, result;
    result = this.classifier.classify(request);
    if (result.error) {
      return this.classification_error(result.error, request, response);
    } else {
      handler = this.find_handler(result.match);
      return handler(request, response, result.data);
    }
  };

  SimpleDispatcher.prototype.classification_error = function(kind, request, response) {
    var error, status;
    status = this.statuses[kind] || 400;
    error = {
      status: status,
      error: http.STATUS_CODES[status],
      description: "you goofed"
    };
    if (this.error_handler) {
      return this.error_handler(error);
    } else {
      return this.default_error_handler(error, response);
    }
  };

  SimpleDispatcher.prototype.find_handler = function(match) {
    var action, resource;
    if (resource = this.handlers[match.resource_type]) {
      if (action = resource[match.action_name]) {
        return action;
      } else {
        throw "Resource '" + match.resource_type + "' has no such action: " + match.action_name;
      }
    } else {
      throw "No such resource: " + match.resource_type;
    }
  };

  SimpleDispatcher.prototype.default_error_handler = function(error, response) {
    response.writeHead(status, {
      "Content-Type": "application/json"
    });
    return response.end(JSON.stringify(error));
  };

  SimpleDispatcher.prototype.statuses = {
    "authorization": 401,
    "path": 404,
    "query": 404,
    "method": 405,
    "accept": 406,
    "content_type": 415
  };

  return SimpleDispatcher;

})();

module.exports = SimpleDispatcher;
